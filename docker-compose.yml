version: '3.4'

networks:
    default:
        name: formula-1-network
        driver: bridge

services:
    web:
        container_name: formula-1-web
        image: formula-1-web
        restart: always
        build: ./Formula-1-Web
        networks:
            - default
        ports:
            - "443:443"
        environment:
            - NGINX_PORT=443
        volumes:
            - ./docker-volumes/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
            - ./docker-volumes/certs:/etc/ssl:ro
            #- ./data/certbot/conf:/etc/letsencrypt:ro
            #- ./data/certbot/www:/var/www/certbot:ro

    api:
        container_name: formula-1-api
        image: formula-1-api
        restart: always
        build: ./Formula-1-API
        networks:
            - default
        # ports:
        #     - "443:443"
        depends_on:
            - db
        environment:
            ASPNETCORE_URLS: https://+:443;http://+:80
            ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            REDIS_CONNECTIONSTRING: ${REDIS_CONNECTIONSTRING}
            ASPNETCORE_Kestrel__Certificates__Default__Path: ${Certificates_Path}
            ASPNETCORE_Kestrel__Certificates__Default__Password: ${Certificates_Password}
        volumes:
            - ./docker-volumes/certs:/app/certs:rw
            # - ~/.aspnet/https:/https:ro
            - ~/.aspnet/DataProtection-Keys:/root/.aspnet/DataProtection-Keys:rw
            #- ./data/formula-1-race-data:/app/Data

    db:
        container_name: formula-1-db
        image: mysql:8
        restart: always
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        networks:
            - default
        ports:
            - "3306:3306"
        volumes:
            - ./docker-volumes/mysql:/var/lib/mysql:rw

    cache:
        container_name: formula-1-cache
        image: redis:7-alpine
        restart: always
        networks:
            - default
        ports:
            - "6379:6379"
        volumes:
            - ./docker-volumes/redis:/usr/local/etc/redis:rw

    ops:
        container_name: formula-1-ops
        image: formula-1-ops
        build: .
        restart: always
        networks:
            - default
        ports:
            - "80:80"
        environment:
            ASPNETCORE_URLS: https://+:443;http://+:80
            ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
            MYSQL_HOST: ${MYSQL_HOST}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            REDIS_CONNECTIONSTRING: ${REDIS_CONNECTIONSTRING}
            ASPNETCORE_Kestrel__Certificates__Default__Path: ${Certificates_Path}
            ASPNETCORE_Kestrel__Certificates__Default__Password: ${Certificates_Password}
        volumes:
            - ./docker-volumes/certs:/app/certs:rw
            # - ~/.aspnet/https:/https:ro
            - ~/.aspnet/DataProtection-Keys:/root/.aspnet/DataProtection-Keys:rw
            #- ./data/formula-1-race-data:/app/Data

    #certbot:
    #     container_name: formula-1-certbot
    #     image: certbot/certbot
    #     restart: always
    #     command: /bin/bash -c "certbot certonly --webroot --webroot-path /var/www/certbot/ -d formula1.websites.local"
    #     volumes:
    #        - ./docker-volumes/certbot/conf:/etc/letsencrypt:rw
    #        - ./docker-volumes/certbot/www:/var/www/certbot:rw
